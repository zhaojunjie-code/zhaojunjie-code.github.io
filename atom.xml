<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zhaojunjie-code.github.io/</id>
    <title>杰</title>
    <updated>2021-04-02T10:11:38.074Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zhaojunjie-code.github.io/"/>
    <link rel="self" href="https://zhaojunjie-code.github.io/atom.xml"/>
    <subtitle>前端探索</subtitle>
    <logo>https://zhaojunjie-code.github.io/images/avatar.png</logo>
    <icon>https://zhaojunjie-code.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 杰</rights>
    <entry>
        <title type="html"><![CDATA[JS实现完美的拖拽]]></title>
        <id>https://zhaojunjie-code.github.io/post/js-shi-xian-wan-mei-de-tuo-zhuai/</id>
        <link href="https://zhaojunjie-code.github.io/post/js-shi-xian-wan-mei-de-tuo-zhuai/">
        </link>
        <updated>2021-04-02T08:19:32.000Z</updated>
        <content type="html"><![CDATA[<h1 id="预备知识">预备知识</h1>
<p>##event事件对象</p>
<h3 id="与光标有关的属性-clientx">与光标有关的属性 clientX</h3>
<p>返回当事件被触发时，鼠标的水平坐标(距离 px)</p>
<h3 id="与光标有关的属性-clienty">与光标有关的属性 clientY</h3>
<p>返回当事件被触发时，鼠标的垂直坐标(距离 px)</p>
<h2 id="html元素对象">HTML元素对象</h2>
<h3 id="offsetleft">offsetLeft</h3>
<p>当前元素相对与最近定位的父元素的水平距离(px)</p>
<h3 id="offsettop">offsetTop</h3>
<p>当前元素相对与最近定位的父元素的垂直距离(px)</p>
<h1 id="跟随鼠标">跟随鼠标</h1>
<p>每当提到控制DOM跟随鼠标移动，我们头脑里会蹦出PageX,PageY 它们俩分别返回当前光标的水平坐标和垂直坐标。</p>
<pre><code class="language-javaScript">var left = event.pageX;
var top = event.pageY;
box1.style.left = left + &quot;px&quot;;
box1.style.top = top +&quot;px&quot;;
</code></pre>
<p>这很容易实现</p>
<h2 id="当我们将上述操作应用到拖拽操作时">当我们将上述操作应用到拖拽操作时</h2>
<p>我们会发现，点击一个元素的某一位置进行拖拽时，元素总会跳变到跟随鼠标移动的位置<br>
<img src="https://zhaojunjie-code.github.io//post-images/1617353505592.png" alt="" loading="lazy"><br>
这导致用户体验感极差<br>
如何解决这个问题呢？<br>
<img src="https://zhaojunjie-code.github.io//post-images/1617354112330.png" alt="" loading="lazy"><br>
我们可以看到</p>
<h3 id="clientx-offsetleft-水平跳变距离">clientX - offsetLeft = 水平跳变距离</h3>
<h3 id="同理-clienty-offsettop-垂直跳变距离">同理 clientY - offsetTop = 垂直跳变距离</h3>
<pre><code class="language-javaScript">box1.onmousedown = function (event) {
               var ol = event.clientX - box1.offsetLeft;
               var ot = event.clientY - box1.offsetTop;
               document.onmousemove = function (event) {
                   var X = event.pageX - ol;
                   var Y = event.pageY - ot;
                   box1.style.left = X + &quot;px&quot;;
                   box1.style.top = Y + &quot;px&quot;;
               }
           }
</code></pre>
<p>我们不希望看到跳变，那么就减去跳变距离</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JS实现先阅读协议，后注册]]></title>
        <id>https://zhaojunjie-code.github.io/post/js-shi-xian-xian-yue-du-xie-yi-hou-zhu-ce/</id>
        <link href="https://zhaojunjie-code.github.io/post/js-shi-xian-xian-yue-du-xie-yi-hou-zhu-ce/">
        </link>
        <updated>2021-04-01T11:42:37.000Z</updated>
        <content type="html"><![CDATA[<p>每当我们想注册账号，或者安装软件时，总有一些细致严谨的公司，他们让你在安装前阅读长长的协议。这背后的原理是什么呢？<br>
我们先应该了解JS里的 scrollHeight(文档内容实际高度，包括超出视窗的溢出部分)，scrollTop(滚动条相对于文档顶部的高度，即：滚动距离)，clientHeight(窗口的高度) 属性。</p>
<h1 id="scrollheight">scrollHeight()</h1>
<p>scrollHeight()是window的属性<br>
它是指：文档内容的实际高度，一个网页从页头到页尾。</p>
<h1 id="scrolltop">scrollTop()</h1>
<p>scrollTop()也是window的属性<br>
它是指：垂直滚动条滚动的距离，滚动条下拉的距离。</p>
<h1 id="clientheight">clientHeight()</h1>
<p>clientHeight()是window的属性<br>
翻译过来就很理解：用户所能看到的高度。<br>
<img src="https://zhaojunjie-code.github.io//post-images/1617280221051.png" alt="" loading="lazy"><br>
现在我们应该可以理解背后的原理了吧</p>
<h1 id="就是当红框框到底的时候即-scrollheight-scrolltop-clientheight">就是当红框框到底的时候，即       scrollHeight - scrollTop = clientHeight</h1>
<pre><code class="language-javaScript">					//检查垂直滚动条是否滚动到底
 				if(info.scrollHeight - info.scrollTop == info.clientHeight){
 					//滚动条滚动到底，使表单项可用
 					/*
 					 * disabled属性可以设置一个元素是否禁用，
 					 * 	如果设置为true，则元素禁用
 					 * 	如果设置为false，则元素可用
 					 */
 					inputs[0].disabled = false;
 					inputs[1].disabled = false;
 				}</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[第一次使用Gridea]]></title>
        <id>https://zhaojunjie-code.github.io/post/di-yi-ci-shi-yong-gridea/</id>
        <link href="https://zhaojunjie-code.github.io/post/di-yi-ci-shi-yong-gridea/">
        </link>
        <updated>2021-03-31T16:05:56.000Z</updated>
        <content type="html"><![CDATA[<p>2021/4/1 0:08<br>
终于写下了第一篇博客，为前端的学习做好了准备<br>
<em>斜体字</em><br>
<strong>粗体字</strong><br>
<em><strong>粗斜体文本</strong></em><br>
<em>插入斜线</em></p>
<hr>
<p><s>删除文字</s><br>
<u>带上下划线</u><br>
<em>添加脚注</em><br>
长沙理工大学<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>有序列表与无序列表，一定要有一个空格</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第三项</li>
<li>第四项</li>
<li>第五项</li>
</ul>
<ul>
<li>第六项</li>
<li>第七项</li>
<li>第八项</li>
</ul>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
<li>第四项，嵌套使用
<ul>
<li>新的一项，要留四个空格</li>
<li>新的一项，要留四个空格</li>
</ul>
</li>
</ol>
<blockquote>
<p>区块</p>
<blockquote>
<p>第一次嵌套</p>
<blockquote>
<p>第二次嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<blockquote>
<p>区块中使用列表</p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<ul>
<li>第一项</li>
<li>第二项</li>
</ul>
</blockquote>
<p>列表中使用区块</p>
<ol>
<li>
<p>第一项</p>
<blockquote>
<p>第一区块<br>
第二区块<br>
第三区块</p>
</blockquote>
</li>
<li>
<p>第二项</p>
<blockquote>
<p>第一区块<br>
第二区块<br>
第三区块</p>
</blockquote>
</li>
</ol>
<p>代码区块,三个漂符，可以指定语言也可不指定语言<br>
<code>printf()</code> 函数</p>
<pre><code class="language-javaScript">$(document).ready(function () {
    alert('RUNOOB');
});
</code></pre>
<p>基本的链接使用方法<br>
这是一个<a href="https://www.runoob.com">菜鸟教程</a>的链接<br>
高级使用方法<br>
用1设置链接变量<br>
这是一个链接 [菜鸟教程][1]<br>
[1]:  https://www.runoob.com/<br>
两种显示出图片的方法<br>
<img src="http://static.runoob.com/images/runoob-logo.png" alt="这里填显示不出来的代替文字" loading="lazy"><br>
<img src="http://static.runoob.com/images/runoob-logo.png" width="50%"></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>双非大学 <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
    </entry>
</feed>